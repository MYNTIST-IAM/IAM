name: Auto-Heal Detect

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  detect:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Detect auto-heal candidates and write manifests
        id: detect
        run: |
          python scripts/auto_heal.py > detect_output.json
          cat detect_output.json

      - name: Ensure jq is available
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update && sudo apt-get install -y jq
          fi

      - name: Check for candidates
        id: check
        run: |
          COUNT=$(jq -r '.count // 0' detect_output.json || echo 0)
          if [ "$COUNT" = "0" ]; then
            echo "No candidates"
            echo "has_candidates=false" >> $GITHUB_OUTPUT
          else
            echo "Found $COUNT candidates"
            echo "has_candidates=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        id: create-pr
        if: steps.check.outputs.has_candidates == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT_TOKEN }}
          title: "Auto-Heal: Proposed Remediations"
          body: |
            This PR proposes auto-heal remediations based on policy and score history.
            - Generated by `scripts/auto_heal.py`
            - Please review manifests under `ops/autoheal/`
            - Merging will trigger enforcement via `autoheal_apply.yml`
          branch: autoheal-${{ github.run_number }}
          base: main
          labels: auto-heal
          reviewers: ${{ secrets.SECURITY_REVIEWERS }}
          commit-message: "autoheal: propose remediation for $(jq -r '.count // 0' detect_output.json) tokens"

      - name: Record PR number in ledger (best-effort)
        if: steps.check.outputs.has_candidates == 'true'
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Get PR number from the create-pull-request action output
          PR_NUMBER="${{ steps.create-pr.outputs.pull-request-number }}"
          if [ -z "$PR_NUMBER" ] || [ "$PR_NUMBER" = "null" ]; then
            echo "No PR number found from create-pull-request action"
            exit 0
          fi
          echo "Linking PR #$PR_NUMBER to pending actions"
          printf '%s\n' \
            'import yaml,sys' \
            'from pathlib import Path' \
            'lp=Path("security/token-ledger.yml")' \
            'd=yaml.safe_load(lp.read_text())' \
            'changed=False' \
            'for t in d.get("tokens",[]):' \
            '    pa=t.get("pending_action")' \
            '    if isinstance(pa,dict) and (pa.get("pr_number") in (None,"",0)):' \
            '        pa["pr_number"]=int(sys.argv[1])' \
            '        changed=True' \
            'if changed:' \
            '    lp.write_text(yaml.dump(d, default_flow_style=False, sort_keys=False))' \
            > link_pr.py
          python link_pr.py "$PR_NUMBER"
          rm -f link_pr.py
          git config user.email "bot@users.noreply.github.com"
          git config user.name "auto-heal-bot"
          git add security/token-ledger.yml || true
          if git diff --cached --quiet; then
            echo "No ledger PR-number changes"
            exit 0
          fi
          git commit -m "autoheal: link pending actions to PR #$PR_NUMBER"
          git push
