name: Auto-Heal Detect

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch: {}

jobs:
  detect:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r IAM/requirements.txt

      - name: Run scoring if needed
        run: |
          cd IAM
          python scripts/survivability_scoring.py

      - name: Detect auto-heal candidates and write manifests
        id: detect
        run: |
          cd IAM
          python scripts/auto_heal.py > detect_output.json
          cat detect_output.json

      - name: Ensure jq is available
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update && sudo apt-get install -y jq
          fi

      - name: Create branch with manifests
        if: always()
        id: branch
        run: |
          set -e
          COUNT=$(jq -r '.count // 0' IAM/detect_output.json || echo 0)
          if [ "$COUNT" = "0" ]; then
            echo "No candidates"
            exit 0
          fi
          BR="autoheal/$(date -u +%Y%m%d-%H%M%S)"
          git config user.email "bot@users.noreply.github.com"
          git config user.name "auto-heal-bot"
          git checkout -b "$BR"
          git add .
          git commit -m "autoheal: propose remediation for $COUNT tokens"
          git push origin "$BR"
          echo "branch=$BR" >> $GITHUB_OUTPUT

      - name: Open PR
        if: steps.branch.outputs.branch != ''
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Auto-Heal: Proposed Remediations"
          body: |
            This PR proposes auto-heal remediations based on policy and score history.
            - Generated by `IAM/scripts/auto_heal.py`
            - Please review manifests under `IAM/ops/autoheal/`
            - Merging will trigger enforcement via `autoheal_apply.yml`
          branch: ${{ steps.branch.outputs.branch }}
          labels: auto-heal
          reviewers: ${{ secrets.SECURITY_REVIEWERS }}

      - name: Record PR number in ledger (best-effort)
        if: steps.branch.outputs.branch != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if command -v gh >/dev/null 2>&1; then
            PR_NUMBER=$(gh pr list --head "${{ steps.branch.outputs.branch }}" --state open --json number --jq '.[0].number' || echo "")
          else
            echo "gh not available; skipping PR number linking"
            exit 0
          fi
          if [ -z "$PR_NUMBER" ]; then
            echo "No PR number found"
            exit 0
          fi
          python - <<'PY'
import yaml,sys
from pathlib import Path
lp=Path('IAM/security/token-ledger.yml')
d=yaml.safe_load(lp.read_text())
changed=False
for t in d.get('tokens',[]):
    pa=t.get('pending_action')
    if isinstance(pa,dict) and (pa.get('pr_number') in (None,'',0)):
        pa['pr_number']=int(sys.argv[1])
        changed=True
if changed:
    lp.write_text(yaml.dump(d, default_flow_style=False, sort_keys=False))
PY
          git config user.email "bot@users.noreply.github.com"
          git config user.name "auto-heal-bot"
          git add IAM/security/token-ledger.yml || true
          if git diff --cached --quiet; then
            echo "No ledger PR-number changes"
            exit 0
          fi
          git commit -m "autoheal: link pending actions to PR #$PR_NUMBER"
          git push origin "${{ steps.branch.outputs.branch }}"


